AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: |
  sam-app
  Sample SAM Template for sam-app

# More info about Globals: https://github.com/awslabs/serverless-application-model/blob/master/docs/globals.rst
Globals:
  Function:
    Handler: app.lambda_handler
    Timeout: 5
    Runtime: python3.12
    Architectures:
      - x86_64

Parameters:
  ExistingTable:
    Type: String
    Default: example-table
    Description: (Required) The name of an existing DynamoDB
    MinLength: 3
    MaxLength: 255
    AllowedPattern: ^[A-Za-z_-]+$
    ConstraintDescription: Required. Can be characters, hyphen, and underscore only.
      No numbers or special characters allowed.

Resources:
  HelloWorldFunction:
    Type: AWS::Serverless::Function # More info about Function Resource: https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#awsserverlessfunction
    Properties:
      CodeUri: src/hello_world/
      Events:
        HelloWorld:
          Type: Api # More info about API Event Source: https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#api
          Properties:
            Path: /hello
            Method: get

  CreatePlayerFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: src/create_player/
      Events:
        CreateActivities:
          Type: Api
          Properties:
            Path: /players
            Method: post
      Policies:
        - DynamoDBCrudPolicy:
            TableName: !Ref ExistingTable
      Environment:
        Variables:
          TABLE: !Ref ExistingTable

  GetPlayerFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: src/get_player/
      Events:
        CreateActivities:
          Type: Api
          Properties:
            Path: /players/{id}
            Method: get
      Policies:
        - DynamoDBCrudPolicy:
            TableName: !Ref ExistingTable
      Environment:
        Variables:
          TABLE: !Ref ExistingTable

  ListPlayersFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: src/list_players/
      Events:
        CreateActivities:
          Type: Api
          Properties:
            Path: /players/
            Method: get
      Policies:
        - DynamoDBCrudPolicy:
            TableName: !Ref ExistingTable
      Environment:
        Variables:
          TABLE: !Ref ExistingTable

  UpdatePlayerFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: src/update_player/
      Events:
        CreateActivities:
          Type: Api
          Properties:
            Path: /players/{id}
            Method: put
      Policies:
        - DynamoDBCrudPolicy:
            TableName: !Ref ExistingTable
      Environment:
        Variables:
          TABLE: !Ref ExistingTable

  DeletePlayerFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: src/delete_player/
      Events:
        CreateActivities:
          Type: Api
          Properties:
            Path: /players/{id}/{date}
            Method: delete
      Policies:
        - DynamoDBCrudPolicy:
            TableName: !Ref ExistingTable
      Environment:
        Variables:
          TABLE: !Ref ExistingTable

Outputs:
  # ServerlessRestApi is an implicit API created out of Events key under Serverless::Function
  # Find out more about other implicit resources you can reference within SAM
  # https://github.com/awslabs/serverless-application-model/blob/master/docs/internals/generated_resources.rst#api
  HelloWorldApi:
    Description: API Gateway endpoint URL for Prod stage for Hello World function
    Value: !Sub https://${ServerlessRestApi}.execute-api.${AWS::Region}.amazonaws.com/Prod/hello
  HelloWorldFunction:
    Description: Hello World Lambda Function ARN
    Value: !GetAtt HelloWorldFunction.Arn
  HelloWorldFunctionIamRole:
    Description: Implicit IAM Role created for Hello World function
    Value: !GetAtt HelloWorldFunctionRole.Arn
  CreatePlayerApi:
    Description: API Gateway endpoint URL for Prod stage for Create Player function
    Value: !Sub https://${ServerlessRestApi}.execute-api.${AWS::Region}.amazonaws.com/Prod/players
  CreatePlayerFunction:
    Description: Create Player Lambda Function ARN
    Value: !GetAtt CreatePlayerFunction.Arn
  CreatePlayerFunctionIamRole:
    Description: Implicit IAM Role created for Create Activity function
    Value: !GetAtt CreatePlayerFunctionRole.Arn
  GetPlayerApi:
    Description: API Gateway endpoint URL for Prod stage for Get Player function
    Value: !Sub https://${ServerlessRestApi}.execute-api.${AWS::Region}.amazonaws.com/Prod//players/{id}
  GetPlayerFunction:
    Description: Get Activity Lambda Function ARN
    Value: !GetAtt GetPlayerFunction.Arn
  GetPlayerFunctionIamRole:
    Description: Implicit IAM Role created for Get Player function
    Value: !GetAtt GetPlayerFunctionRole.Arn
  ListPlayersApi:
    Description: API Gateway endpoint URL for Prod stage for List Players function
    Value: !Sub https://${ServerlessRestApi}.execute-api.${AWS::Region}.amazonaws.com/Prod/players/
  ListPlayersFunction:
    Description: List Activities Lambda Function ARN
    Value: !GetAtt ListPlayersFunction.Arn
  ListPlayersFunctionIamRole:
    Description: Implicit IAM Role created for List Players function
    Value: !GetAtt ListPlayersFunctionRole.Arn
  UpdatePlayerApi:
    Description: API Gateway endpoint URL for Prod stage for Update Player function
    Value: !Sub https://${ServerlessRestApi}.execute-api.${AWS::Region}.amazonaws.com/Prod/update_player/
  UpdatePlayerFunction:
    Description: Update Activity Lambda Function ARN
    Value: !GetAtt UpdatePlayerFunction.Arn
  UpdatePlayerFunctionIamRole:
    Description: Implicit IAM Role created for Update Player function
    Value: !GetAtt UpdatePlayerFunctionRole.Arn
  DeletePlayerApi:
    Description: API Gateway endpoint URL for Prod stage for Delete function
    Value: !Sub https://${ServerlessRestApi}.execute-api.${AWS::Region}.amazonaws.com/Prod/players/{id}/{date}
  DeletePlayerFunction:
    Description: Delete Activity Lambda Function ARN
    Value: !GetAtt DeletePlayerFunction.Arn
  DeletePlayerFunctionIamRole:
    Description: Implicit IAM Role created for Delete Player function
    Value: !GetAtt DeletePlayerFunctionRole.Arn